{"organizations": [], "uuid": "223b3a06ff9ac4aeecef4fef44c25062b85259c6", "thread": {"social": {"gplus": {"shares": 1}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 0}, "facebook": {"likes": 1, "shares": 1, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "habrahabr.ru", "main_image": "https://habrastorage.org/files/f9f/4ba/119/f9f4ba119f5a4741bdcbe7ca59a7fa91.png", "site_section": "http://habrahabr.ru/rss/", "section_title": "Хабрахабр / Интересные публикации", "url": "https://habrahabr.ru/post/311430/?utm_source=habrahabr&utm_medium=rss&utm_campaign=interesting", "country": "RU", "domain_rank": 1685, "title": "Тестировщик vs разработчик", "performance_score": 0, "site": "habrahabr.ru", "participants_count": 11, "title_full": "Тестировщик vs разработчик / Хабрахабр", "spam_score": 0.0, "site_type": "news", "published": "2016-09-30T23:01:00.000+03:00", "replies_count": 12, "uuid": "6c960ab51b2c82ebbed2c7589c25125f9030601d"}, "author": "habrahabr.ru", "url": "https://habrahabr.ru/post/311430/", "ord_in_thread": 0, "title": "Тестировщик vs разработчик", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "russian", "persons": [], "text": "Сегодня я бы хотел затронуть тему процесса разработки программного обеспечения. Если точнее, эта статья о том «Как не превратить офис в поле битвы тестировщиков и разработчиков».\n\nПолгода назад я погрузился в тестирование ПО, мне было интересно и я понял, что это действительно моё. Часами залипал на форумах тестировщиков, читал литературу и изучал процесс разработки ПО. На форумах, в группах и беседах я частенько замечал приколы про взаимодействие тестировщиков и разработчиков, но я не понимал этих шуток и не обращал на это внимание. По крайней мере, пока не попал на стажировку в одну компанию по разработке ПО.\n\nЧерез пару месяцев я начал догонять смысл этих приколов и активных обсуждений «Tester vs Developer». Так как я был первым тестировщиком в этой компании, освоиться было сложно. Задачам с пустым описанием, но с названиями «протестируй и отпишись», «проверь сайт», «не работает приложение» не было конца, а разработчики и проджект менеджер вообще не знали понятие QA. Всем знакома эта фраза «Без ТЗ – результат ХЗ», так вот там было тоже самое. Плюс ко всему этому, никого не волновало то, что продукт мягко говоря «кривоват». В большинство случаев было так: ты получаешь задание «протестируй» — тестируешь, делаешь отчет о найденных дефектах и передаешь их разработчику, ну а у разработчика эта задача могла висеть месяцами. В итоге шеф посчитал, что тестировщик в штате лишний и для меня этот кошмар закончился, ну а продукт так и остался «кривым».\n\n\n\nБывают разные споры, разногласия, но мне кажется, что уже давно пора придумать какой-нибудь простой подход, чтобы избежать подобных случаев.\n\nСкриншот из беседы тестировщиков ПО:\n\n\n\nНайти дефект — задокументировать — передать разработчику для исправления. Но опять-таки, вроде бы всё просто, если бы не реакция разработчика на свои ошибки. Наверное он просто забыл о том, что задача тестировщика это поиск ошибок и сбоев в функционировании объекта. В итоге мы как дружное сообщество начали давать разные советы бедной даме. Многие предлагали решать вопрос через тимлида, а некоторые даже предлагали набить лицо за такое отношение. Ну а я предложил свой вариант, но многим он показался странным. \n\nЧерез некоторое время я попал на один интересный проект, в котором проджект менеджер был мостом между тестировщиком и разработчиками. Я не знаю, насколько эта концепция эффективна, но мы за всё время ни разу не поругались. Как баг трекинговую систему мы использовали Trello. Эта система удобна тем, что она вся построена на основе доски и все, что в ней есть, находится на одном экране: и задачи, и история изменений, и любые комментарии. Но это же и главный минус программы. Она слишком простая и не предназначена для больших команд. \n\nОт проджект менеджера прилетала задача, во время тестирования каждый баг оформлялся в отдельную карточку и прикреплялся в блок «Баги» с меткой «Недочёт» и с подробным описанием. Затем проджект менеджер задавал приоритет карточке и закидывал одному из разработчиков. Иногда такое бывает, что сроки горят и до встречи с заказчиком нужно проверить самые важные моменты. В таком случае проджект менеджер задавал высокий приоритет багам связанных с бизнес логикой, а баги связанные с UI откладывались на потом. У многих возникнет вопрос \" Кто тогда будет отвечать за упущенные баги в прод? \", к сожалению мы сам не в курсе. \n\nСамое важное в таком процессе, это то, что тестировщик не взаимодействует с командой разработчиков, следовательно, нет криков, ссор и споров:\n\n— Да это же баг!\n— Нет, это фича! \n\nЕсли в вашей команде адекватный project manager или product owner, попробуйте протестировать такой подход. Я думаю, что многим понравится. \n\nКонечно же, есть компании, в которых отношение разработчиков и тестировщиков идеальное. Например, в которых за упущенные баги в продакшн и жалобы пользователей отвечает разработчик. В таком случае разработчик сам будет заинтересован в хороших отношениях с тестировщиком. Но опять-таки возникает вопрос \" А сколько компании работают по по такому принципу? \"\n\n\n\nВсем спасибо за внимание.", "external_links": [], "published": "2016-09-30T23:01:00.000+03:00", "crawled": "2016-10-02T08:33:03.132+03:00", "highlightTitle": ""}